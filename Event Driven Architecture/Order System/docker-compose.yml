services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: python-event-app
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - .:/code
  #   develop:
  #     watch:
  #       - path: ./
  #         target: /code
  #         action: sync
  #         ignore:
  #           - "*.pyc"
  #           - "__pycache__"
  #   depends_on:
  #     - postgres-database
  #     - kafka
  #   networks:
  #     - kafka-network
  postgres-database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - backend-network
  
  kafka:
    image: apache/kafka:3.9.0
    ports:
      - "29092:29092"
    
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: BROKER://kafka:9092,CONTROLLER://kafka:9093,PLAINTEXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka:9092,PLAINTEXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      CLUSTER_ID: 'WhateverClusterID'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-network

volumes:
  postgres_data:
    driver: local
  kafka-data:

networks:
  kafka-network:
    driver: bridge
  backend-network:    # Add this network definition
    driver: bridge

  
